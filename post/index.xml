<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 352 Game Hub</title>
    <link>https://talsulin.github.io/post/</link>
    <description>Recent content in Posts on 352 Game Hub</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 26 Feb 2019 13:50:01 -0600</lastBuildDate><atom:link href="https://talsulin.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating a New Theme</title>
      <link>https://talsulin.github.io/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://talsulin.github.io/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://talsulin.github.io/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://talsulin.github.io/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/▾ images/logo.png should become
▾ &amp;lt;root&amp;gt;/▾ static/▾ images/logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Papercss Shortcodes</title>
      <link>https://talsulin.github.io/papercss-shortcodes/</link>
      <pubDate>Tue, 26 Feb 2019 13:50:01 -0600</pubDate>
      
      <guid>https://talsulin.github.io/papercss-shortcodes/</guid>
      <description>collapsible {{&amp;lt; collapsible &amp;quot;First&amp;quot; &amp;gt;}}Bacon ipsum dolor sit amet beef venison beef ribs kielbasa.{{&amp;lt; /collapsible &amp;gt;}}{{&amp;lt; collapsible &amp;quot;Second&amp;quot; &amp;gt;}}Bacon ipsum dolor sit amet landjaeger sausage brisket.{{&amp;lt; /collapsible &amp;gt;}}FirstBacon ipsum dolor sit amet beef venison beef ribs kielbasa.SecondBacon ipsum dolor sit amet landjaeger sausage brisket.border {{&amp;lt; border &amp;gt;}}Regular{{&amp;lt; /border &amp;gt;}}{{&amp;lt; border &amp;quot;dashed&amp;quot; &amp;gt;}}Dashed{{&amp;lt; /border &amp;gt;}}{{&amp;lt; border &amp;quot;dotted&amp;quot; &amp;gt;}}Dotted{{&amp;lt; /border &amp;gt;}}{{&amp;lt; border &amp;quot;dashed thick&amp;quot; &amp;gt;}}Dashed Thick{{&amp;lt; /border &amp;gt;}}{{&amp;lt; border &amp;quot;dotted thick&amp;quot; &amp;gt;}}Dotted Thick{{&amp;lt; /border &amp;gt;}}RegularDashedDottedDashed ThickDotted Thickcolor {{&amp;lt; color &amp;quot;primary&amp;quot; &amp;gt;}}Text primary{{&amp;lt; /color &amp;gt;}}{{&amp;lt; color &amp;quot;secondary&amp;quot; &amp;gt;}}Text secondary{{&amp;lt; /color &amp;gt;}}{{&amp;lt; color &amp;quot;success&amp;quot; &amp;gt;}}Text success{{&amp;lt; /color &amp;gt;}}{{&amp;lt; color &amp;quot;warning&amp;quot; &amp;gt;}}Text warning{{&amp;lt; /color &amp;gt;}}{{&amp;lt; color &amp;quot;danger&amp;quot; &amp;gt;}}Text danger{{&amp;lt; /color &amp;gt;}}{{&amp;lt; color &amp;quot;muted&amp;quot; &amp;gt;}}Text muted{{&amp;lt; /color &amp;gt;}}Text primaryText secondaryText successText warningText dangerText mutedbackground {{&amp;lt; background &amp;quot;primary&amp;quot; &amp;gt;}}Background primary{{&amp;lt; /background &amp;gt;}}{{&amp;lt; background &amp;quot;secondary&amp;quot; &amp;gt;}}Background secondary{{&amp;lt; /background &amp;gt;}}{{&amp;lt; background &amp;quot;success&amp;quot; &amp;gt;}}Background success{{&amp;lt; /background &amp;gt;}}{{&amp;lt; background &amp;quot;warning&amp;quot; &amp;gt;}}Background warning{{&amp;lt; /background &amp;gt;}}{{&amp;lt; background &amp;quot;danger&amp;quot; &amp;gt;}}Background danger{{&amp;lt; /background &amp;gt;}}Background primaryBackground secondaryBackground successBackground warningBackground dangeralert {{&amp;lt; alert &amp;quot;primary&amp;quot; &amp;gt;}}Alert-primary{{&amp;lt; /alert &amp;gt;}}{{&amp;lt; alert &amp;quot;secondary&amp;quot; &amp;gt;}}Alert-secondary{{&amp;lt; /alert &amp;gt;}}{{&amp;lt; alert &amp;quot;success&amp;quot; &amp;gt;}}Alert-success{{&amp;lt; /alert &amp;gt;}}{{&amp;lt; alert &amp;quot;warning&amp;quot; &amp;gt;}}Alert-warning{{&amp;lt; /alert &amp;gt;}}{{&amp;lt; alert &amp;quot;danger&amp;quot; &amp;gt;}}Alert-danger{{&amp;lt; /alert &amp;gt;}}Alert-primaryAlert-secondaryAlert-successAlert-warningAlert-dangerbadge &amp;lt;h3&amp;gt;Example badge {{&amp;lt; badge &amp;gt;}}123{{&amp;lt; /badge &amp;gt;}}&amp;lt;/h3&amp;gt;&amp;lt;h3&amp;gt;Example badge {{&amp;lt; badge &amp;quot;secondary&amp;quot; &amp;gt;}}123{{&amp;lt; /badge &amp;gt;}}&amp;lt;/h3&amp;gt;&amp;lt;h3&amp;gt;Example badge {{&amp;lt; badge &amp;quot;success&amp;quot; &amp;gt;}}123{{&amp;lt; /badge &amp;gt;}}&amp;lt;/h3&amp;gt;&amp;lt;h3&amp;gt;Example badge {{&amp;lt; badge &amp;quot;warning&amp;quot; &amp;gt;}}123{{&amp;lt; /badge &amp;gt;}}&amp;lt;/h3&amp;gt;&amp;lt;h3&amp;gt;Example badge {{&amp;lt; badge &amp;quot;danger&amp;quot; &amp;gt;}}123{{&amp;lt; /badge &amp;gt;}}&amp;lt;/h3&amp;gt;Example badge 123Example badge 123Example badge 123Example badge 123Example badge 123card The img param accepts an image page resource name.</description>
    </item>
    
    <item>
      <title>PaperCSS Typography</title>
      <link>https://talsulin.github.io/papercss-typography/</link>
      <pubDate>Fri, 22 Feb 2019 20:53:58 -0600</pubDate>
      
      <guid>https://talsulin.github.io/papercss-typography/</guid>
      <description>Headings # Heading 1## Heading 2### Heading 3#### Heading 4##### Heading 5###### Heading 6Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 Text *This text will be italic*_This will also be italic_**This text will be bold**__This will also be bold___You **can** combine them_This text will be italic
This will also be italic
This text will be bold</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://talsulin.github.io/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://talsulin.github.io/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://talsulin.github.io/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://talsulin.github.io/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
  </channel>
</rss>
