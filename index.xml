<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on 352 Game Hub</title>
    <link>https://talsulin.github.io/</link>
    <description>Recent content in Blog on 352 Game Hub</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 26 Feb 2019 13:50:01 -0600</lastBuildDate><atom:link href="https://talsulin.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating a New Theme</title>
      <link>https://talsulin.github.io/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://talsulin.github.io/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://talsulin.github.io/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://talsulin.github.io/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/▾ images/logo.pngshould become
▾ &amp;lt;root&amp;gt;/▾ static/▾ images/logo.pngAdditionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Papercss Shortcodes</title>
      <link>https://talsulin.github.io/papercss-shortcodes/</link>
      <pubDate>Tue, 26 Feb 2019 13:50:01 -0600</pubDate>
      
      <guid>https://talsulin.github.io/papercss-shortcodes/</guid>
      <description>collapsible {{&amp;lt; collapsible &amp;#34;First&amp;#34; &amp;gt;}}Bacon ipsum dolor sit amet beef venison beef ribs kielbasa.{{&amp;lt; /collapsible &amp;gt;}}{{&amp;lt; collapsible &amp;#34;Second&amp;#34; &amp;gt;}}Bacon ipsum dolor sit amet landjaeger sausage brisket.{{&amp;lt; /collapsible &amp;gt;}} FirstBacon ipsum dolor sit amet beef venison beef ribs kielbasa.SecondBacon ipsum dolor sit amet landjaeger sausage brisket.border {{&amp;lt; border &amp;gt;}}Regular{{&amp;lt; /border &amp;gt;}}{{&amp;lt; border &amp;#34;dashed&amp;#34; &amp;gt;}}Dashed{{&amp;lt; /border &amp;gt;}}{{&amp;lt; border &amp;#34;dotted&amp;#34; &amp;gt;}}Dotted{{&amp;lt; /border &amp;gt;}}{{&amp;lt; border &amp;#34;dashed thick&amp;#34; &amp;gt;}}Dashed Thick{{&amp;lt; /border &amp;gt;}}{{&amp;lt; border &amp;#34;dotted thick&amp;#34; &amp;gt;}}Dotted Thick{{&amp;lt; /border &amp;gt;}} RegularDashedDottedDashed ThickDotted Thickcolor {{&amp;lt; color &amp;#34;primary&amp;#34; &amp;gt;}}Text primary{{&amp;lt; /color &amp;gt;}}{{&amp;lt; color &amp;#34;secondary&amp;#34; &amp;gt;}}Text secondary{{&amp;lt; /color &amp;gt;}}{{&amp;lt; color &amp;#34;success&amp;#34; &amp;gt;}}Text success{{&amp;lt; /color &amp;gt;}}{{&amp;lt; color &amp;#34;warning&amp;#34; &amp;gt;}}Text warning{{&amp;lt; /color &amp;gt;}}{{&amp;lt; color &amp;#34;danger&amp;#34; &amp;gt;}}Text danger{{&amp;lt; /color &amp;gt;}}{{&amp;lt; color &amp;#34;muted&amp;#34; &amp;gt;}}Text muted{{&amp;lt; /color &amp;gt;}} Text primaryText secondaryText successText warningText dangerText mutedbackground {{&amp;lt; background &amp;#34;primary&amp;#34; &amp;gt;}}Background primary{{&amp;lt; /background &amp;gt;}}{{&amp;lt; background &amp;#34;secondary&amp;#34; &amp;gt;}}Background secondary{{&amp;lt; /background &amp;gt;}}{{&amp;lt; background &amp;#34;success&amp;#34; &amp;gt;}}Background success{{&amp;lt; /background &amp;gt;}}{{&amp;lt; background &amp;#34;warning&amp;#34; &amp;gt;}}Background warning{{&amp;lt; /background &amp;gt;}}{{&amp;lt; background &amp;#34;danger&amp;#34; &amp;gt;}}Background danger{{&amp;lt; /background &amp;gt;}} Background primaryBackground secondaryBackground successBackground warningBackground dangeralert {{&amp;lt; alert &amp;#34;primary&amp;#34; &amp;gt;}}Alert-primary{{&amp;lt; /alert &amp;gt;}}{{&amp;lt; alert &amp;#34;secondary&amp;#34; &amp;gt;}}Alert-secondary{{&amp;lt; /alert &amp;gt;}}{{&amp;lt; alert &amp;#34;success&amp;#34; &amp;gt;}}Alert-success{{&amp;lt; /alert &amp;gt;}}{{&amp;lt; alert &amp;#34;warning&amp;#34; &amp;gt;}}Alert-warning{{&amp;lt; /alert &amp;gt;}}{{&amp;lt; alert &amp;#34;danger&amp;#34; &amp;gt;}}Alert-danger{{&amp;lt; /alert &amp;gt;}} Alert-primaryAlert-secondaryAlert-successAlert-warningAlert-dangerbadge &amp;lt;h3&amp;gt;Example badge {{&amp;lt; badge &amp;gt;}}123{{&amp;lt; /badge &amp;gt;}}&amp;lt;/h3&amp;gt;&amp;lt;h3&amp;gt;Example badge {{&amp;lt; badge &amp;#34;secondary&amp;#34; &amp;gt;}}123{{&amp;lt; /badge &amp;gt;}}&amp;lt;/h3&amp;gt;&amp;lt;h3&amp;gt;Example badge {{&amp;lt; badge &amp;#34;success&amp;#34; &amp;gt;}}123{{&amp;lt; /badge &amp;gt;}}&amp;lt;/h3&amp;gt;&amp;lt;h3&amp;gt;Example badge {{&amp;lt; badge &amp;#34;warning&amp;#34; &amp;gt;}}123{{&amp;lt; /badge &amp;gt;}}&amp;lt;/h3&amp;gt;&amp;lt;h3&amp;gt;Example badge {{&amp;lt; badge &amp;#34;danger&amp;#34; &amp;gt;}}123{{&amp;lt; /badge &amp;gt;}}&amp;lt;/h3&amp;gt; Example badge 123Example badge 123Example badge 123Example badge 123Example badge 123card The img param accepts an image page resource name.</description>
    </item>
    
    <item>
      <title>Texas Hold&#39;em</title>
      <link>https://talsulin.github.io/texas-holdem/</link>
      <pubDate>Tue, 26 Feb 2019 13:50:01 -0600</pubDate>
      
      <guid>https://talsulin.github.io/texas-holdem/</guid>
      <description>德州扑克规则与玩法 V1.0 座位图 荷官庄家位置的确定 第一个按钮庄家的位置是荷官（发牌的人）将牌一张一张地分发给玩家，拿到最强牌的人确定为庄家位。 确定按钮庄家位的玩家后，就开始正式发牌。
发牌 每个玩家发到2张排面朝下的牌，游戏开始。 这2张牌称为“底牌”或“口袋牌”。 游戏中只有2张牌是发给每位玩家的，除了进行摊牌外，没有必要将它展示给其他玩家，并且必须小心不要被人看到它。
翻牌前 先下大小盲注，然后给每个玩家发2张底牌，大盲注后面第一个玩家选择跟注、加注或者盖牌放弃，按照顺时针方向，其他玩家依次表态，大盲注玩家最后表态，如果玩家有加注情况，前面已经跟注的玩家需要再次表态甚至多次表态。
翻牌 同时发三张公牌，由小盲注开始（如果小盲注已盖牌，由后面最近的玩家开始，以此类推），按照顺时针方向依次表态，玩家可以选择下注、加注、或者盖牌放弃。
转牌&amp;amp;河牌 Turn—发第四张牌，由小盲注开始，按照顺时针方向依次表态。River—发第五张牌，由小盲注开始，按照顺时针方向依次表态，玩家可以选择下注、加注、或者盖牌放弃。 经过前面四轮发牌和下注，还剩余2名以上的玩家时，开始比大小，这时候需要亮牌。
亮牌 剩余2名以上的玩家开始亮牌比大小，成牌最大的玩家赢取池底。 亮牌是用自己的2张底牌和5张公共牌结合在一起，选出5张牌，通过比大小决定胜者。 不论手中的牌使用几张（甚至可以不用手中的底牌），凑成最大的成牌，跟其他玩家比大小。
一般德州撲克牌型大小依序為： 皇家同花順 &amp;gt; 同花順 &amp;gt; 四條 &amp;gt; 葫蘆 &amp;gt; 同花 &amp;gt; 順子 &amp;gt; 三條&amp;gt; 兩對 &amp;gt; 對子 &amp;gt; 散牌
All-in 玩家全押只能赢取自己筹码量那部分筹码， 例如，玩家1在转牌下注$50，而玩家2仅剩$35， 如果玩家2跟注，则将玩家1下注的$50中拿出$35放入底池的”主池”(main pot)中，而剩余的$15将分两种情况: (a)如果是玩家1与玩家2两个人单挑，则将$15返还给玩家1; (b)将$15放入“边池”(side pot)，未弃牌且还有筹码的玩家将争夺边池中的筹码。全押后，玩家2无法从边池中赢得任何筹码。 如果两名玩家单挑，其中一名全押，另一名玩家跟注或全押，将省略之后的下注回合 ，直接发完5张牌然后摊牌比大小。现金局中，这种情况也可以提前摊牌，然后2名玩家协商发多次(run it twice)来降低波动；这种情况必须是2名玩家的全押，必须2人都同意发多次(一般2-5次)，从全押的时刻开始，把剩余的公共牌发出多次，按赢的次数比例分底池。</description>
    </item>
    
    <item>
      <title>PaperCSS Typography</title>
      <link>https://talsulin.github.io/papercss-typography/</link>
      <pubDate>Fri, 22 Feb 2019 20:53:58 -0600</pubDate>
      
      <guid>https://talsulin.github.io/papercss-typography/</guid>
      <description>Headings # Heading 1## Heading 2### Heading 3#### Heading 4##### Heading 5###### Heading 6 Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 Text *This text will be italic*_This will also be italic_**This text will be bold**__This will also be bold___You **can** combine them_ This text will be italic
This will also be italic
This text will be bold</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://talsulin.github.io/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://talsulin.github.io/about/</guid>
      <description>Hugo is the world’s fastest framework for building websites. It is written in Go.
It makes use of a variety of open source projects including:
https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Learn more and contribute on GitHub.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://talsulin.github.io/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://talsulin.github.io/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://talsulin.github.io/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://talsulin.github.io/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description>
    </item>
    
  </channel>
</rss>
